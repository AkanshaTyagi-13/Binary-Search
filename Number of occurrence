class Solution {
    int firstOcc(int[] arr, int target){
        int s=0, e=arr.length-1, ans=Integer.MAX_VALUE;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]>target){
                e=mid-1;
            }
            else if(arr[mid]<target){
                s=mid+1;
            }
            else{
                e=mid-1;
                ans=Math.min(ans,mid);
            }
        }
        return ans==Integer.MAX_VALUE?-1:ans;
    }
    int lastOcc(int[] arr, int target){
        int s=0,e=arr.length-1,ans=Integer.MIN_VALUE;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]<target){
                s=mid+1;
            }
            else if(arr[mid]>target){
                e=mid-1;
            }
            else{
                s=mid+1;
                ans=Math.max(ans,mid);
            }
        }
        return ans==Integer.MIN_VALUE?-1:ans;
    }
    int countFreq(int[] arr, int target) {
        // code here
        int last=lastOcc(arr,target);
        int frst=firstOcc(arr,target);
        if(last==-1&&frst==-1) return 0;
        else return (last-frst+1);
    }
}
