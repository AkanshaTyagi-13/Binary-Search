class Solution {
    public int firstOcc(int[] nums,int target){
        int s=0, e=nums.length-1, ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
            else{
                ans=mid;
                e=mid-1;
            }
        }
        return ans;
    }

    public int lastOcc(int[] nums, int target){
        int s=0, e=nums.length-1,ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
            else{
                ans=mid;
                s=mid+1;
            }
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) {
        if(nums.length==0){
            return new int[]{-1,-1};
        }
        int first=firstOcc(nums,target);
        int last=lastOcc(nums, target);
        return new int[]{first,last};
    }
}
